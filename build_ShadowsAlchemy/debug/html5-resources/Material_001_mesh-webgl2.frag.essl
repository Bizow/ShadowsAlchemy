#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D ImageTexture_002_texread;
uniform highp sampler2D ImageTexture_001;
uniform highp sampler2D ImageTexture;

in highp vec3 wnormal;
in highp vec2 texCoord;
out highp vec4 fragColor[3];

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

highp float packFloatInt16(highp float f, uint i)
{
    uint bitsInt = i << 12u;
    uint bitsFloat = uint(f * 4095.0);
    return float(bitsInt | bitsFloat);
}

highp float packFloat2(highp float f1, highp float f2)
{
    return floor(f1 * 255.0) + min(f2, 0.9900000095367431640625);
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec3 TextureCoordinate_texread_UV_res = vec3(texCoord.x, 1.0 - texCoord.y, 0.0);
    TextureCoordinate_texread_UV_res = TextureCoordinate_texread_UV_res;
    highp float SeparateXYZ_texread_X_res = TextureCoordinate_texread_UV_res.x;
    highp float SeparateXYZ_texread_Y_res = TextureCoordinate_texread_UV_res.y;
    highp float Math_003_texread_Value_res = 0.0;
    highp vec4 ImageTexture_002_texread_store = texture(ImageTexture_002_texread, texCoord);
    highp vec3 _105 = pow(ImageTexture_002_texread_store.xyz, vec3(2.2000000476837158203125));
    ImageTexture_002_texread_store = vec4(_105.x, _105.y, _105.z, ImageTexture_002_texread_store.w);
    highp vec3 ImageTexture_002_texread_Color_res = ImageTexture_002_texread_store.xyz;
    highp float SeparateColor_texread_Blue_res = ImageTexture_002_texread_Color_res.z;
    highp float Math_002_texread_Value_res = Math_003_texread_Value_res * SeparateColor_texread_Blue_res;
    highp float Math_texread_Value_res = SeparateXYZ_texread_Y_res - Math_002_texread_Value_res;
    highp float SeparateXYZ_texread_Z_res = TextureCoordinate_texread_UV_res.z;
    highp vec3 CombineXYZ_texread_Vector_res = vec3(SeparateXYZ_texread_X_res, Math_texread_Value_res, SeparateXYZ_texread_Z_res);
    highp vec4 ImageTexture_001_texread_store = texture(ImageTexture_001, vec2(CombineXYZ_texread_Vector_res.x, 1.0 - CombineXYZ_texread_Vector_res.y));
    highp vec3 _143 = pow(ImageTexture_001_texread_store.xyz, vec3(2.2000000476837158203125));
    ImageTexture_001_texread_store = vec4(_143.x, _143.y, _143.z, ImageTexture_001_texread_store.w);
    highp vec4 ImageTexture_texread_store = texture(ImageTexture, vec2(CombineXYZ_texread_Vector_res.x, 1.0 - CombineXYZ_texread_Vector_res.y));
    highp vec3 _158 = pow(ImageTexture_texread_store.xyz, vec3(2.2000000476837158203125));
    ImageTexture_texread_store = vec4(_158.x, _158.y, _158.z, ImageTexture_texread_store.w);
    highp vec3 ImageTexture_001_Color_res = ImageTexture_001_texread_store.xyz;
    highp vec3 ImageTexture_Color_res = ImageTexture_texread_store.xyz;
    highp vec3 ImageTexture_002_Color_res = ImageTexture_002_texread_store.xyz;
    highp float SeparateColor_Green_res = ImageTexture_002_Color_res.y;
    highp float Math_001_Value_res = 1.0 - SeparateColor_Green_res;
    highp float SeparateColor_Red_res = ImageTexture_002_Color_res.x;
    highp vec3 basecol = ImageTexture_Color_res * (1.0 - clamp(dot(ImageTexture_001_Color_res, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875)), 0.0, 1.0));
    highp float roughness = Math_001_Value_res;
    highp float metallic = SeparateColor_Red_res;
    highp float occlusion = 1.0;
    highp float specular = 1.0;
    highp vec3 emissionCol = ImageTexture_Color_res * clamp(dot(ImageTexture_001_Color_res, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875)), 0.0, 1.0);
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _220;
    if (n.z >= 0.0)
    {
        _220 = n.xy;
    }
    else
    {
        _220 = octahedronWrap(n.xy);
    }
    n = vec3(_220.x, _220.y, n.z);
    fragColor[0] = vec4(n.xy, roughness, packFloatInt16(metallic, 0u));
    fragColor[1] = vec4(basecol, packFloat2(occlusion, specular));
    fragColor[2] = vec4(emissionCol, 0.0);
}

